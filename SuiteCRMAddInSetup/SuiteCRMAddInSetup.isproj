<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<Project ToolsVersion="4.0" DefaultTargets="BuildSetup" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
	<PropertyGroup>
		<!-- Select a Product Configuration -->
		<InstallShieldProductConfiguration>Express</InstallShieldProductConfiguration>
		<!-- Select a Visual Studio Configuration / InstallShield Release -->
		<Configuration>Release</Configuration>
		<InstallShieldRelease>$(Configuration)</InstallShieldRelease>
	</PropertyGroup>
	<ItemGroup>
		<!-- The InstallShieldProject item selects the project to build -->
		<InstallShieldProject Include="$(MSBuildProjectDirectory)\$(MSBuildProjectName).isl"/>
		<!-- The InstallShieldReleaseFlags sets Release Flags -->
		<!--<InstallShieldReleaseFlags Include=""/>-->
		<!-- The InstallShieldMergeModulePath specifies what directories are
		searched for Merge Modules -->
		<!--<InstallShieldMergeModulePath Include=""/>-->
	</ItemGroup>
	<ItemGroup>
		<!-- The ProjectReference items refer to any Visual Studio solutions you want to automatically probe for Project Output Groups.  -->
		<ProjectReference Include="..\SuiteCRMAddIn\SuiteCRMAddIn.csproj">
			<Name>SuiteCRMAddIn</Name>
			<Project>{8EF51293-040D-4A83-AFC3-9EA8C328B653}</Project>
		</ProjectReference>
	</ItemGroup>
	<ItemGroup>
		<!-- The TaggedOutputs items allow you to explicitly add extra files to output groups. Each item must include both Name and OutputGroup, as well as TargetPath metadata values. -->
		<!--<TaggedOutputs Include="C:\My Test Exe.exe">
			<Name>My Test Project</Name>
			<OutputGroup>Primary output</OutputGroup>
			<TargetPath>My Test Exe.exe</TargetPath>
		</TaggedOutputs> -->
	</ItemGroup>
	<PropertyGroup>
		<SetupExeIslFileName>SetupExe.isl</SetupExeIslFileName>
	</PropertyGroup>
	<Import Project="$(MSBuildExtensionsPath32)\InstallShield\2015Limited\InstallShield.targets"/>
	<UsingTask TaskName="CreateSetupExeISL" TaskFactory="CodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.v4.0.dll">
		<ParameterGroup>
			<TargetFileName ParameterType="System.String" Required="true"/>
		</ParameterGroup>
		<Task>
			<Reference Include="System.Core"/>
			<Using Namespace="System"/>
			<Using Namespace="System.IO"/>
			<Using Namespace="System.Text.RegularExpressions"/>
			<Code Type="Fragment" Language="cs">
				<![CDATA[
          /*
           * Make a copy of the ISL file, substituting into it the values we need to convert to 
           * generate a setup.exe installer.
           */
          String msiIslFileName = "SuiteCRMAddinSetup.isl";
          
          /*
           * TODO: This does not add the .Net 4.5 and VSTO redistributables that it would
           * be desirable to add (TRICKY!).
           */
          File.WriteAllText(TargetFileName, 
            Regex.Replace( File.ReadAllText(msiIslFileName),
              "<row><td>SingleImage</td><td>Express</td><td>&lt;ISProjectDataFolder&gt;</td><td>PackageName</td><td>1</td><td>1033</td><td>0</td><td>1</td><td>Intel</td><td/><td>1033</td><td>0</td><td>0</td><td>0</td><td>0</td><td/><td>0</td><td/><td>MediaLocation</td><td/><td>http://</td><td/><td/><td/><td/><td>108572</td><td/><td/><td/><td>3</td></row>",
              "<row><td>SingleImage</td><td>Express</td><td>&lt;ISProjectDataFolder&gt;</td><td>PackageName</td><td>1</td><td>1033</td><td>0</td><td>1</td><td>Intel</td><td/><td>1033</td><td>2</td><td>0</td><td>0</td><td>0</td><td/><td>0</td><td/><td>MediaLocation</td><td/><td>http://</td><td/><td/><td/><td/><td>108573</td><td/><td/><td/><td>3</td></row>"));
        ]]>
			</Code>
		</Task>
	</UsingTask>
	<Target Name="BuildSetup" DependsOnTargets="Build">
		<CreateSetupExeISL TargetFileName="$(MSBuildProjectDirectory)\$(SetupExeIslFileName)"/>
		<InstallShield InstallShieldPath="$(InstallShieldPath)" Project="$(MSBuildProjectDirectory)\$(SetupExeIslFileName)" ProductConfiguration="$(InstallShieldProductConfiguration)" ReleaseConfiguration="$(InstallShieldRelease)" PatchConfiguration="$(InstallShieldPatchConfiguration)" ReleaseFlags="@(InstallShieldReleaseFlags)" OutputGroups="@(_TaggedProjectOutputs)" MergeModulePath="@(InstallShieldMergeModulePath)" ProductVersion="$(InstallShieldProductVersion)" PropertyOverrides="@(InstallShieldPropertyOverrides)" PathVariables="@(InstallShieldPathVariableOverrides)" PreprocessorDefines="@(InstallShieldPreprocessorDefines)" PrerequisitePath="@(InstallShieldPrerequisitePath)" RunMsiValidator="@(InstallShieldMsiValidators)" InstallShieldVerboseOutput="$(InstallShieldVerboseOutput)"/>
	</Target>
</Project>